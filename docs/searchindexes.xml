<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>25-10-27 功与过</title><url>/gongguo/25-10-27/</url><categories><category>功过</category></categories><tags/><content type="html">   25年10月27日——功与过 今日功 NOTE 分享、去私心 听书 今日过 WARNING 行为杂乱无章 自己的事未提前专注搞 浮躁   </content></entry><entry><title>开发相关的一些知识点</title><url>/learn/251027-%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E7%82%B9/</url><categories><category>学习</category></categories><tags/><content type="html"><![CDATA[   今日的开发零散知识点：注解、依赖注入、中间件、跨域 注解 给代码（编译）、开发者看的注释 python注解：
1 2 def greet(name: str) -&gt; str: return f&#34;Hello, {name}&#34; java注解：
1 2 3 4 5 6 7 8 9 10 11 12 @Override public String toString() { return &#34;Example&#34;; } @Deprecated public void oldMethod() { // 已过时的方法 } @SuppressWarnings(&#34;unchecked&#34;) List&lt;String&gt; list = new ArrayList(); 依赖注入 不用自己“new”对象，告诉框架“我需要什么”，框架会自动给你“注入”。
python依赖注入：
1 2 3 4 5 6 7 class UserService: def __init__(self, database_connection): self.db = database_connection # 使用时 db_conn = DatabaseConnection() user_service = UserService(db_conn) Python的FastAPI里面有很多依赖注入方式（# TODO）
java依赖注入：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class UserService { private final UserRepository userRepository; // 构造函数注入 public UserService(UserRepository userRepository) { this.userRepository = userRepository; } } // 使用注解自动注入 @Service public class UserController { @Autowired private UserService userService; } 中间件 客户端和服务端（请求方和提供方）之间提供和支撑数据交互的中间层
跨域 域名、子域名、端口、ip，这些会引起跨域问题，就是访问不到对应的资源项目
  ]]></content></entry><entry><title>25-10-26 功与过</title><url>/gongguo/25-10-26/</url><categories><category>功过</category></categories><tags/><content type="html">   25年10月26日——功与过 今日功 NOTE 整理内务 出门散心 甜点分享 今日过 WARNING 邪淫 行为杂乱无章 手机刷的头晕   </content></entry><entry><title>今夜，行走钱塘江边</title><url>/posts/%E9%92%B1%E5%A1%98%E6%B1%9F%E8%BE%B9/</url><categories><category>生活</category></categories><tags><tag>散步</tag></tags><content type="html">   今夜，行走钱塘江边 在宿舍（员工宿舍）里待了一天，着实不怎么自在，再加上今天阴天，我的情绪也比较低沉。夜色来临后，我独自骑上了小黄车，本打算熟悉一下去西湖的路，奈何半途遇到跨江大桥（复兴大桥）不知怎么过去，就骑着车转了好一会儿，往西北走去，眼前突然涌现出一片风景——一片江、一座桥、一排公寓楼，心情一下舒畅许多。我就这样沿着江边走着，走着走着，心情感慨，不知道是什么情绪，站上看台，望着这眼前的一切，江拍打着岸边，我以为是鱼儿跳跃的声音，中途突然低了几滴雨，跟我情绪恰好。最后望了望“复兴大桥”，重返公司，不过是徒步走回去的。
杭州真的好大，公司都很大，但是感觉差点人情味。
在封闭环境待久了真的很有必要出去走走，可以是贴近大自然，可以是望星空，也可以是去热闹的地方溜达，当然也可以像我一样漫无目的地走，走，走……
  </content></entry><entry><title>Prompt-Cache、A2A、ReAct</title><url>/learn/251024-%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</url><categories><category>学习</category></categories><tags><tag>大模型</tag><tag>AI</tag></tags><content type="html"><![CDATA[   今天抽空了解一下Prompt-Cache、A2A、ReAct，之前都是听听别人或者有博客提到 Prompt-Cache 由名字可以直观了解到就是通过缓存常用的一些提示词，从而提高推理响应效率
想想场景，其实这个应用场景蛮多，但是在LMM API请求的时候最为实用，因为很多时候我们通过API请求LLM的时候，同一个节点或者模块的Prompt一般都是一样的，唯一就是会有一些变量信息携带进去，这时候就完全可以采用缓存策略，把当前请求节点的Prompt（复用的内容）做缓存，下次请求过来直接使用就行，但是如何快速识别出当前节点也是个问题，也就是缓存命中率问题。
我觉得这个在用户层面进行模版化操作比较方便，就是让用户的prompt内容分为「复用」和「变量」部分，APi后端接口解析传参然后再通过缓存走LLM，这样我觉得是比较高效的策略，其实就是如何快速识别cache的问题。
这个场景其实是可以做一套规范的，分析必要的要素、结构、输入输出、上下游，基本上就可以应用在各种LMM的API服务当中了。当然，还需要考虑实时更改prompt的情况。
A2A A2A协议：一个为Agent间通信设计的开放标准，提高不同组织开发的Agent协作效率。全称就是Agent2Agent
笔者个人听上去跟MCP类似，不过一个是统一Function Call的标准，一个是统一Agent的标准。
一般这种协议的制定都会设定一个「Server」和「Client」。
这里我突然想起面试时候有呗问到说“有没有多Agent的实践”，当时的确没有，不过后面可以结合这个做demo，然后讲讲A2A、MCP。
Agent应该有对应的Agent Card，基本样例如下：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { &amp;#34;name&amp;#34;: &amp;#34;智能旅行助手&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;专业的旅行规划和预订服务&amp;#34;, &amp;#34;provider&amp;#34;: &amp;#34;TravelTech Inc.&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;https://api.travelagent.com/a2a&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, …  ]]></content></entry><entry><title>文章模版</title><url>/posts/%E6%96%87%E7%AB%A0%E6%A8%A1%E7%89%88/</url><categories><category>工具</category></categories><tags/><content type="html">   新建文章直接复制的模版 标题1 主要思想 正文内容
标题2 主要思想 正文内容
  </content></entry><entry><title>我的提示词模版库</title><url>/posts/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%A8%A1%E7%89%88%E5%BA%93/</url><categories><category>工具</category></categories><tags><tag>大模型</tag><tag>Prompt</tag></tags><content type="html"><![CDATA[   这里会记录我的一些提示词模板，比较好用的我就会放在里。 决策和工具调用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 您是助手，请充分了解用户的问题，选择合适的工具，逐步帮助用户解决问题。 ### 约束 #### 1. 所选工具必须是工具列表(Tool List)中的工具。 2. 当无法找到工具的输入时，请立即调整并使用AskHumanHelpTool向用户询问其他参数。 3. 当你相信你有最终的答案，可以回应用户，请使用TaskCompleteTool。 ### Tool List ### [ Search: 如果需要搜索请用它.paramDescription ： [{&#34;name&#34;: &#34;searchKey&#34;, &#34;description&#34;: &#34;搜索参数&#34;,&#34;type&#34;:&#34;String&#34;}] AskHumanHelpTool: 如果需要人类帮助，请使用它。paramDescription ： [{&#34;name&#34;: &#34;question&#34;, &#34;description&#34;: &#34;问题&#34;,&#34;type&#34;:&#34;String&#34;}] TaskCompleteTool：如果你认为你已经有了最终答案，请使用它。paramDescription ： [{&#34;name&#34;: &#34;answer&#34;, &#34;description&#34;: &#34;答案&#34;,&#34;type&#34;:&#34;String&#34;}] ] 您应该只以JSON格式响应，回复格式样例如下： ### 回复格式 ### { {&#34;thought&#34;: &#34;为什么选择这个工具的思考&#34;,&#34;tool_names&#34;: &#34;工具名&#34;,&#34;args_list&#34;: {“工具名1”:{&#34;参数名1&#34;: &#34;参数值1&#34;,&#34;参数名2&#34;: &#34;参数值2&#34;}}}} 确保您返回的响应内容都是JSON格式，并且不包含任何额外内容。   ]]></content></entry><entry><title>关于EthanLiu6</title><url>/about/</url><categories/><tags/><content type="html">   就是一个普普通通的人   </content></entry><entry><title/><url>/posts/test/</url><categories/><tags/><content type="html">   WARNING 📧 嘿，这篇文章已是 296 天 前的陈年佳酿
INFO 在新版本Hugo框架中添加了对blockquote样式渲染
  </content></entry></search>